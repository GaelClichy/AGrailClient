using System.Collections;
using System.Collections.Generic;

public abstract class Singleton<T> where T : new()
{
    private static object locker = new object();
    private static T instance;
    public static T Instance
    {
        get
        {
            if (null == instance)
            {
                lock (locker)
                {
                    if(null == instance)
                        instance = new T();
                }
            }
                
            return instance;
        }
    }
}